#!/usr/bin/env python3
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Summarize the results from running single_row_throughput_benchmark."""

# %%
import argparse
import numpy as np
import pandas as pd
import plotnine as p9
import re


# %%
def load_multiple_rows_cpu_benchmark_output(filename):
    """Loads the output generated by multiple_rows_cpu_benchmark.

    :param filename(str) the name of the file to load
    """
    df = pd.read_csv(filename, comment='#', header=0)
    experiment = filename.replace('.txt', '')
    experiment = experiment.replace('multiple_rows_cpu_benchmark.', '')
    experiment = re.sub(r'\.[0-9]+$', '', experiment)
    df['experiment'] = experiment
    df['RowCountNormalized'] = [x if x != 0 else 1 for x in df['RowCount']]
    df['CpuPerRow'] = df['CpuTime'] / df['RowCountNormalized']
    return df


# %%
parser = argparse.ArgumentParser()
parser.add_argument('input_files', nargs='+',
                    help='the benchmark output file(s) to load')
parser.add_argument('--output-file', type=str, required=True,
                    help='the name for the output plot')
args = parser.parse_args()

# %%
frames = [load_multiple_rows_cpu_benchmark_output(filename) for filename in
          args.input_files]
data = pd.concat(frames)
data['experiment'].factorize()

# %%
print(data.head())

# %%
print(data.describe())

# %%
p = (p9.ggplot(data=data,
               mapping=p9.aes(x='UsingStub', y='CpuPerRow'))
     + p9.geom_violin()
     + p9.facet_wrap(facets='experiment')).save(args.output_file, dpi=200)
